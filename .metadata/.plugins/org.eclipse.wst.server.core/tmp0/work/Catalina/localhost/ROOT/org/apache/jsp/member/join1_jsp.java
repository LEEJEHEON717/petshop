/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.83
 * Generated at: 2024-02-26 08:54:29 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class join1_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"en\">\n");
      out.write("<head>\n");
      out.write("    <meta charset=\"UTF-8\">\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n");
      out.write("    <link rel=\"stylesheet\" href=\"../resources/css/join1.css\">\n");
      out.write("    <script src=\"https://kit.fontawesome.com/9ae9f544ec.js\" crossorigin=\"anonymous\"></script>\n");
      out.write("    <title>SignUp</title>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("    <div id=\"container\">\n");
      out.write("        <div id=\"top\">\n");
      out.write("            <div class=\"join_header_wrap\">\n");
      out.write("                <div class=\"join_header_inner\">\n");
      out.write("                    <a href=\"/main.do\" title=\"홈으로\"><img class=\"logo\" src=\"../resources/img/logo/로고_01_logo2.2.jpg\"></a>\n");
      out.write("                    <ol>\n");
      out.write("                        <li><span>01</span> 가입방법 <i class=\"fa-solid fa-caret-right\"></i></li>\n");
      out.write("                        <li class=\"page_on\"><span>02</span> 약관동의 <i class=\"fa-solid fa-caret-right\"></i></li>\n");
      out.write("                        <li><span>03</span> 정보입력 <i class=\"fa-solid fa-caret-right\"></i></li>\n");
      out.write("                        <li><span>04</span> 가입완료</li>\n");
      out.write("                    </ol>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("        <div id=\"mid\">\n");
      out.write("            <form action=\"#\" id=\"mid_form\">\n");
      out.write("                <fieldset id=\"using_agree\">\n");
      out.write("                    <legend>이용약관 동의</legend>\n");
      out.write("                    <div>\n");
      out.write("                        <div class=\"law_list\">\n");
      out.write("                            <div class=\"textbox\">\n");
      out.write("                                <p> \n");
      out.write("                                    1. 개인정보 수집목적 및 이용목적\n");
      out.write("                                    <br>가. 서비스 제공에 관한 계약 이행 및 서비스 제공에 따른 요금정산\n");
      out.write("                                    <br>콘텐츠 제공 , 구매 및 요금 결제 , 물품배송 또는 청구지 등 발송 , 금융거래 본인 인증 및 금융 서비스\n");
      out.write("                                    <br>나. 회원 관리\n");
      out.write("                                    <br>회원제 서비스 이용에 따른 본인확인 , 개인 식별 , 불량회원의 부정 이용 방지와 비인가 사용 방지 , 가입 의사 확인 , 연령확인 , 만14세 미만 아동 개인정보 수집 시 법정 대리인 동의여부 확인, 불만처리 등 민원처리 , 고지사항 전달\n");
      out.write("                                </p>\n");
      out.write("                                <br>\n");
      out.write("                                <p>\n");
      out.write("                                    2. 수집하는 개인정보 항목 : 이름 , 생년월일 , 성별 , 로그인ID , 비밀번호 , 자택 전화번호 , 휴대전화번호 , 이메일 , 14세미만 가입자의 경우 법정대리인의 정보\n");
      out.write("                                </p>\n");
      out.write("                                <br>\n");
      out.write("                                <p>\n");
      out.write("                                    3. 개인정보의 보유기간 및 이용기간\n");
      out.write("                                    <br>원칙적으로, 개인정보 수집 및 이용목적이 달성된 후에는 해당 정보를 지체 없이 파기합니다. 단, 다음의 정보에 대해서는 아래의 이유로 명시한 기간 동안 보존합니다.\n");
      out.write("                                    <br>가. 회사 내부 방침에 의한 정보 보유 사유\n");
      out.write("                                    <br>※ 부정거래 방지 및 쇼핑몰 운영방침에 따른 보관 : 1년\n");
      out.write("                                    <br>나. 관련 법령에 의한 정보보유 사유\n");
      out.write("                                    <br>※ 계약 또는 청약철회 등에 관한 기록\n");
      out.write("                                    <br>-보존이유 : 전자상거래등에서의소비자보호에관한법률\n");
      out.write("                                    <br>-보존기간 : 5년\n");
      out.write("                                    <br>※ 대금 결제 및 재화 등의 공급에 관한 기록\n");
      out.write("                                    <br>-보존이유: 전자상거래등에서의소비자보호에관한법률\n");
      out.write("                                    <br>-보존기간 : 5년 \n");
      out.write("                                    <br>※ 소비자 불만 또는 분쟁처리에 관한 기록\n");
      out.write("                                    <br>-보존이유 : 전자상거래등에서의소비자보호에관한법률\n");
      out.write("                                    <br>-보존기간 : 3년 \n");
      out.write("                                    <br>※ 로그 기록 \n");
      out.write("                                    <br>-보존이유: 통신비밀보호법\n");
      out.write("                                    <br>-보존기간 : 3개월\n");
      out.write("                                    <br>※ 동의를 거부할 수 있으나 거부시 회원 가입이 불가능합니다.\n");
      out.write("                                </p>\n");
      out.write("                            </div>\n");
      out.write("                        </div>\n");
      out.write("                        <p class=\"agree_box\">\n");
      out.write("                            <span class=\"Qagree\">이용약관에 동의하십니까?</span>\n");
      out.write("                            <input type=\"checkbox\" name=\"use_agree\" id=\"use_agree\" required>\n");
      out.write("                            <label for=\"use_agree\"> 동의</label>\n");
      out.write("                        </p>\n");
      out.write("                    </div>\n");
      out.write("                </fieldset>\n");
      out.write("                <fieldset id=\"personal_agree\">\n");
      out.write("                    <legend>개인정보 수집 및 이용 동의</legend>\n");
      out.write("                    <div>\n");
      out.write("                        <div class=\"law_list\">\n");
      out.write("                            <div class=\"textbox\">\n");
      out.write("                                <p> \n");
      out.write("                                    1. 개인정보 수집목적 및 이용목적\n");
      out.write("                                    <br>가. 서비스 제공에 관한 계약 이행 및 서비스 제공에 따른 요금정산\n");
      out.write("                                    <br>콘텐츠 제공 , 구매 및 요금 결제 , 물품배송 또는 청구지 등 발송 , 금융거래 본인 인증 및 금융 서비스\n");
      out.write("                                    <br>나. 회원 관리\n");
      out.write("                                    <br>회원제 서비스 이용에 따른 본인확인 , 개인 식별 , 불량회원의 부정 이용 방지와 비인가 사용 방지 , 가입 의사 확인 , 연령확인 , 만14세 미만 아동 개인정보 수집 시 법정 대리인 동의여부 확인, 불만처리 등 민원처리 , 고지사항 전달\n");
      out.write("                                </p>\n");
      out.write("                                <br>\n");
      out.write("                                <p>\n");
      out.write("                                    2. 수집하는 개인정보 항목 : 이름 , 생년월일 , 성별 , 로그인ID , 비밀번호 , 자택 전화번호 , 휴대전화번호 , 이메일 , 14세미만 가입자의 경우 법정대리인의 정보\n");
      out.write("                                </p>\n");
      out.write("                                <br>\n");
      out.write("                                <p>\n");
      out.write("                                    3. 개인정보의 보유기간 및 이용기간\n");
      out.write("                                    <br>원칙적으로, 개인정보 수집 및 이용목적이 달성된 후에는 해당 정보를 지체 없이 파기합니다. 단, 다음의 정보에 대해서는 아래의 이유로 명시한 기간 동안 보존합니다.\n");
      out.write("                                    <br>가. 회사 내부 방침에 의한 정보 보유 사유\n");
      out.write("                                    <br>※ 부정거래 방지 및 쇼핑몰 운영방침에 따른 보관 : 1년\n");
      out.write("                                    <br>나. 관련 법령에 의한 정보보유 사유\n");
      out.write("                                    <br>※ 계약 또는 청약철회 등에 관한 기록\n");
      out.write("                                    <br>-보존이유 : 전자상거래등에서의소비자보호에관한법률\n");
      out.write("                                    <br>-보존기간 : 5년\n");
      out.write("                                    <br>※ 대금 결제 및 재화 등의 공급에 관한 기록\n");
      out.write("                                    <br>-보존이유: 전자상거래등에서의소비자보호에관한법률\n");
      out.write("                                    <br>-보존기간 : 5년 \n");
      out.write("                                    <br>※ 소비자 불만 또는 분쟁처리에 관한 기록\n");
      out.write("                                    <br>-보존이유 : 전자상거래등에서의소비자보호에관한법률\n");
      out.write("                                    <br>-보존기간 : 3년 \n");
      out.write("                                    <br>※ 로그 기록 \n");
      out.write("                                    <br>-보존이유: 통신비밀보호법\n");
      out.write("                                    <br>-보존기간 : 3개월\n");
      out.write("                                    <br>※ 동의를 거부할 수 있으나 거부시 회원 가입이 불가능합니다.\n");
      out.write("                                </p>\n");
      out.write("                            </div>\n");
      out.write("                        </div>\n");
      out.write("                        <p class=\"agree_box\">\n");
      out.write("                            <span class=\"Qagree\">개인정보 수집 및 이용 동의하십니까?</span> \n");
      out.write("                            <input type=\"checkbox\" name=\"person_agree\" id=\"person_agree\" required>\n");
      out.write("                            <label for=\"person_agree\"> 동의</label>\n");
      out.write("                        </p>\n");
      out.write("                    </div>\n");
      out.write("                </fieldset>\n");
      out.write("                <div class=\"btnbox\">\n");
      out.write("                    <button type=\"button\" class=\"reset_btn\" onclick=\"goBack()\">이전단계</button>\n");
      out.write("                    <button type=\"button\" class=\"join_btn\" onclick=\"goToJoin2()\">다음단계</button>\n");
      out.write("                </div>\n");
      out.write("            </form>\n");
      out.write("        </div>\n");
      out.write("    </div>  \n");
      out.write("</body>\n");
      out.write("	<script type=\"text/javascript\" src=\"../resources/js/check.js\"></script>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
