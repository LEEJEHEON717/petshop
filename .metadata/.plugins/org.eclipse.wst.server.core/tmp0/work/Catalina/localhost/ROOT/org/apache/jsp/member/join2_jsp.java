/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.83
 * Generated at: 2024-02-26 08:54:37 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class join2_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>로그인 폼</title>\n");
      out.write("<link rel=\"stylesheet\" href=\"../resources/css/join2.css\">\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("	<div id=\"container\">\n");
      out.write("		<div id=\"top\">\n");
      out.write("			<div class=\"join_header_wrap\">\n");
      out.write("				<div class=\"join_header_inner\">\n");
      out.write("					<a href=\"/main.do\" title=\"홈으로\"><img class=\"logo\"\n");
      out.write("						src=\"../resources/img/logo/로고_01_logo2.2.jpg\"></a>\n");
      out.write("					<ol>\n");
      out.write("						<li><span>01</span> 가입방법 <i class=\"fa-solid fa-caret-right\"></i></li>\n");
      out.write("						<li><span>02</span> 약관동의 <i class=\"fa-solid fa-caret-right\"></i></li>\n");
      out.write("						<li class=\"page_on\"><span>03</span> 정보입력 <i\n");
      out.write("							class=\"fa-solid fa-caret-right\"></i></li>\n");
      out.write("						<li><span>04</span> 가입완료</li>\n");
      out.write("					</ol>\n");
      out.write("				</div>\n");
      out.write("			</div>\n");
      out.write("		</div>\n");
      out.write("		<div id=\"mid\">\n");
      out.write("			<form action=\"/insertmember.do\" id=\"mid_form\" method=\"post\">\n");
      out.write("				<fieldset id=\"join_info\">\n");
      out.write("					<legend>기본정보</legend>\n");
      out.write("					<div>\n");
      out.write("						<table>\n");
      out.write("						<tbody>\n");
      out.write("							<tr>\n");
      out.write("								<th>ID</th>\n");
      out.write("								<td><input type=\"text\" name=\"id\" id=\"id\">\n");
      out.write("									<span>(영문 소문자/숫자, 8~14자)</span></td>\n");
      out.write("							</tr>\n");
      out.write("							<tr>\n");
      out.write("								<th>PassWord</th>\n");
      out.write("								<td>\n");
      out.write("									<input type=\"password\" name=\"passwd\" id=\"passwd\">\n");
      out.write("									<span>(영문대소문자/숫자/특수문자 포함 10자이상)</span>\n");
      out.write("								</td>\n");
      out.write("							</tr>\n");
      out.write("							<tr>\n");
      out.write("								<th>Confirm PW</th>\n");
      out.write("								<td>\n");
      out.write("									<input type=\"password\" name=\"passwd2\" id=\"passwd2\">\n");
      out.write("									<span>(입력하신 비밀번호와 동일하게 입력해주세요)</span>\n");
      out.write("								</td>\n");
      out.write("							</tr>\n");
      out.write("							<tr>\n");
      out.write("								<th>Name</th>\n");
      out.write("								<td>\n");
      out.write("									<input type=\"text\" name=\"name\" id=\"name\">\n");
      out.write("									<span>(이름은 한글로만 입력해주세요)</span>\n");
      out.write("								</td>\n");
      out.write("							</tr>\n");
      out.write("							<tr>\n");
      out.write("								<th>Phone</th>\n");
      out.write("								<td><input type=\"text\" name=\"phone\" id=\"phone\"></td>\n");
      out.write("							</tr>\n");
      out.write("							<tr>\n");
      out.write("								<th>E-mail</th>\n");
      out.write("								<td><input type=\"text\" name=\"email\" id=\"email\"></td>\n");
      out.write("							</tr>\n");
      out.write("							<tr>\n");
      out.write("								<th>Address</th>\n");
      out.write("								<td><input type=\"text\" size=\"10\" name=\"zip_code\"><span>우편번호</span></td>\n");
      out.write("								<td><input type=\"text\" size=\"50\" name=\"address\"><span>주소</span></td>\n");
      out.write("								<td><input type=\"text\" size=\"50\" name=\"detailaddress\"><span>상세주소</span></td>\n");
      out.write("							</tr>\n");
      out.write("						</tbody>\n");
      out.write("						</table>\n");
      out.write("					</div>\n");
      out.write("				</fieldset>\n");
      out.write("				<div class=\"btnbox\">\n");
      out.write("					<button type=\"button\" class=\"reset_btn\" onclick=\"goBack()\">이전 단계</button>\n");
      out.write("					<button type=\"button\" class=\"join_btn\" onclick=\"registerUser()\">회원가입</button>\n");
      out.write("				</div>\n");
      out.write("			</form>\n");
      out.write("		</div>\n");
      out.write("	</div>\n");
      out.write("</body>\n");
      out.write("	<script src=\"../resources/js/check.js\"></script>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
